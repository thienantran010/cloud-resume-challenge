{
 "Resources": {
  "HitsFF5AF8CD": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ApiStack/Hits/Resource"
   }
  },
  "Messages804FA4EB": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "TableName": "Messages1"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ApiStack/Messages/Resource"
   }
  },
  "helloWorldFunctionServiceRole8475DBF0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/helloWorldFunction/ServiceRole/Resource"
   }
  },
  "helloWorldFunction00C940B5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "886e9d1ef2dee1fcf71465b9d1522902711fb68054699717185cb69eb6df06c9.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "helloWorldFunctionServiceRole8475DBF0",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "helloWorldFunctionServiceRole8475DBF0"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/helloWorldFunction/Resource",
    "aws:asset:path": "asset.886e9d1ef2dee1fcf71465b9d1522902711fb68054699717185cb69eb6df06c9",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "postHitFunctionServiceRole6BB4893C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/postHitFunction/ServiceRole/Resource"
   }
  },
  "postHitFunctionServiceRoleDefaultPolicy1AA78C26": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "HitsFF5AF8CD",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "postHitFunctionServiceRoleDefaultPolicy1AA78C26",
    "Roles": [
     {
      "Ref": "postHitFunctionServiceRole6BB4893C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/postHitFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "postHitFunctionFD485D85": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "539d2eb92bfc4842797fcc4ec11c5a714ac35ea133e7d0a74b912363a37caa75.zip"
    },
    "Environment": {
     "Variables": {
      "HITS_TABLE_NAME": {
       "Ref": "HitsFF5AF8CD"
      }
     }
    },
    "Handler": "index.postHit",
    "Role": {
     "Fn::GetAtt": [
      "postHitFunctionServiceRole6BB4893C",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "postHitFunctionServiceRoleDefaultPolicy1AA78C26",
    "postHitFunctionServiceRole6BB4893C"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/postHitFunction/Resource",
    "aws:asset:path": "asset.539d2eb92bfc4842797fcc4ec11c5a714ac35ea133e7d0a74b912363a37caa75",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "getTotalHitsFunctionServiceRoleDC8B68D5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/getTotalHitsFunction/ServiceRole/Resource"
   }
  },
  "getTotalHitsFunctionServiceRoleDefaultPolicy16FAB65E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "HitsFF5AF8CD",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getTotalHitsFunctionServiceRoleDefaultPolicy16FAB65E",
    "Roles": [
     {
      "Ref": "getTotalHitsFunctionServiceRoleDC8B68D5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/getTotalHitsFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getTotalHitsFunction096FC1AD": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "539d2eb92bfc4842797fcc4ec11c5a714ac35ea133e7d0a74b912363a37caa75.zip"
    },
    "Environment": {
     "Variables": {
      "HITS_TABLE_NAME": {
       "Ref": "HitsFF5AF8CD"
      }
     }
    },
    "Handler": "index.getTotalHits",
    "Role": {
     "Fn::GetAtt": [
      "getTotalHitsFunctionServiceRoleDC8B68D5",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "getTotalHitsFunctionServiceRoleDefaultPolicy16FAB65E",
    "getTotalHitsFunctionServiceRoleDC8B68D5"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/getTotalHitsFunction/Resource",
    "aws:asset:path": "asset.539d2eb92bfc4842797fcc4ec11c5a714ac35ea133e7d0a74b912363a37caa75",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "postMessageFunctionServiceRole43693AB0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/postMessageFunction/ServiceRole/Resource"
   }
  },
  "postMessageFunctionServiceRoleDefaultPolicy3A8AB13B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Messages804FA4EB",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "postMessageFunctionServiceRoleDefaultPolicy3A8AB13B",
    "Roles": [
     {
      "Ref": "postMessageFunctionServiceRole43693AB0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/postMessageFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "postMessageFunction9657ED12": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "1197ae97f21189a5af12b70b45b3dcf84ec71e9447f32c0f64bce64b7a76c6aa.zip"
    },
    "Environment": {
     "Variables": {
      "MESSAGES_TABLE_NAME": {
       "Ref": "Messages804FA4EB"
      }
     }
    },
    "Handler": "index.postMessage",
    "Role": {
     "Fn::GetAtt": [
      "postMessageFunctionServiceRole43693AB0",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "postMessageFunctionServiceRoleDefaultPolicy3A8AB13B",
    "postMessageFunctionServiceRole43693AB0"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/postMessageFunction/Resource",
    "aws:asset:path": "asset.1197ae97f21189a5af12b70b45b3dcf84ec71e9447f32c0f64bce64b7a76c6aa",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "getMessagesFunctionServiceRole1D939B5B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/getMessagesFunction/ServiceRole/Resource"
   }
  },
  "getMessagesFunctionServiceRoleDefaultPolicyDCC60E4A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Messages804FA4EB",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getMessagesFunctionServiceRoleDefaultPolicyDCC60E4A",
    "Roles": [
     {
      "Ref": "getMessagesFunctionServiceRole1D939B5B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/getMessagesFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getMessagesFunctionCBE544AC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "1197ae97f21189a5af12b70b45b3dcf84ec71e9447f32c0f64bce64b7a76c6aa.zip"
    },
    "Environment": {
     "Variables": {
      "MESSAGES_TABLE_NAME": {
       "Ref": "Messages804FA4EB"
      }
     }
    },
    "Handler": "index.getMessages",
    "Role": {
     "Fn::GetAtt": [
      "getMessagesFunctionServiceRole1D939B5B",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "getMessagesFunctionServiceRoleDefaultPolicyDCC60E4A",
    "getMessagesFunctionServiceRole1D939B5B"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/getMessagesFunction/Resource",
    "aws:asset:path": "asset.1197ae97f21189a5af12b70b45b3dcf84ec71e9447f32c0f64bce64b7a76c6aa",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "API62EA1CFF": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "API "
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Resource"
   }
  },
  "APIDeployment0E06874E39375ee4b3e2a73f773e8329d13bb9a3": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "DependsOn": [
    "APIGET4B2FB1CA",
    "APIhitsGET982E4EF0",
    "APIhitsOPTIONS8FB8FCD6",
    "APIhitsPOST03666373",
    "APIhits5D40C30D",
    "APImessagesGET69DADC53",
    "APImessagesOPTIONSD9D2274A",
    "APImessagesPOSTE7359F16",
    "APImessagesCDE67788",
    "APIOPTIONSCA9FDA90"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Deployment/Resource"
   }
  },
  "APIDeploymentStageprod278E75BA": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "APIDeployment0E06874E39375ee4b3e2a73f773e8329d13bb9a3"
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/DeploymentStage.prod/Resource"
   }
  },
  "APIOPTIONSCA9FDA90": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "API62EA1CFF",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/OPTIONS/Resource"
   }
  },
  "APIGETApiPermissionApiStackAPICE700FF7GET3E90DB58": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "helloWorldFunction00C940B5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "API62EA1CFF"
       },
       "/",
       {
        "Ref": "APIDeploymentStageprod278E75BA"
       },
       "/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/GET/ApiPermission.ApiStackAPICE700FF7.GET.."
   }
  },
  "APIGETApiPermissionTestApiStackAPICE700FF7GET2751FCA2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "helloWorldFunction00C940B5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "API62EA1CFF"
       },
       "/test-invoke-stage/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/GET/ApiPermission.Test.ApiStackAPICE700FF7.GET.."
   }
  },
  "APIGET4B2FB1CA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "helloWorldFunction00C940B5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "API62EA1CFF",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/GET/Resource"
   }
  },
  "APIhits5D40C30D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "API62EA1CFF",
      "RootResourceId"
     ]
    },
    "PathPart": "hits",
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/hits/Resource"
   }
  },
  "APIhitsOPTIONS8FB8FCD6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "APIhits5D40C30D"
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/hits/OPTIONS/Resource"
   }
  },
  "APIhitsGETApiPermissionApiStackAPICE700FF7GEThits06537773": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getTotalHitsFunction096FC1AD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "API62EA1CFF"
       },
       "/",
       {
        "Ref": "APIDeploymentStageprod278E75BA"
       },
       "/GET/hits"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/hits/GET/ApiPermission.ApiStackAPICE700FF7.GET..hits"
   }
  },
  "APIhitsGETApiPermissionTestApiStackAPICE700FF7GEThits6D28B002": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getTotalHitsFunction096FC1AD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "API62EA1CFF"
       },
       "/test-invoke-stage/GET/hits"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/hits/GET/ApiPermission.Test.ApiStackAPICE700FF7.GET..hits"
   }
  },
  "APIhitsGET982E4EF0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getTotalHitsFunction096FC1AD",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "APIhits5D40C30D"
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/hits/GET/Resource"
   }
  },
  "APIhitsPOSTApiPermissionApiStackAPICE700FF7POSThits25B870A3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "postHitFunctionFD485D85",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "API62EA1CFF"
       },
       "/",
       {
        "Ref": "APIDeploymentStageprod278E75BA"
       },
       "/POST/hits"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/hits/POST/ApiPermission.ApiStackAPICE700FF7.POST..hits"
   }
  },
  "APIhitsPOSTApiPermissionTestApiStackAPICE700FF7POSThitsD4FC0852": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "postHitFunctionFD485D85",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "API62EA1CFF"
       },
       "/test-invoke-stage/POST/hits"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/hits/POST/ApiPermission.Test.ApiStackAPICE700FF7.POST..hits"
   }
  },
  "APIhitsPOST03666373": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "postHitFunctionFD485D85",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "APIhits5D40C30D"
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/hits/POST/Resource"
   }
  },
  "APImessagesCDE67788": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "API62EA1CFF",
      "RootResourceId"
     ]
    },
    "PathPart": "messages",
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/messages/Resource"
   }
  },
  "APImessagesOPTIONSD9D2274A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "APImessagesCDE67788"
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/messages/OPTIONS/Resource"
   }
  },
  "APImessagesGETApiPermissionApiStackAPICE700FF7GETmessagesEFE9E527": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getMessagesFunctionCBE544AC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "API62EA1CFF"
       },
       "/",
       {
        "Ref": "APIDeploymentStageprod278E75BA"
       },
       "/GET/messages"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/messages/GET/ApiPermission.ApiStackAPICE700FF7.GET..messages"
   }
  },
  "APImessagesGETApiPermissionTestApiStackAPICE700FF7GETmessages6CD8DA15": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getMessagesFunctionCBE544AC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "API62EA1CFF"
       },
       "/test-invoke-stage/GET/messages"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/messages/GET/ApiPermission.Test.ApiStackAPICE700FF7.GET..messages"
   }
  },
  "APImessagesGET69DADC53": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getMessagesFunctionCBE544AC",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "APImessagesCDE67788"
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/messages/GET/Resource"
   }
  },
  "APImessagesPOSTApiPermissionApiStackAPICE700FF7POSTmessages9713A18B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "postMessageFunction9657ED12",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "API62EA1CFF"
       },
       "/",
       {
        "Ref": "APIDeploymentStageprod278E75BA"
       },
       "/POST/messages"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/messages/POST/ApiPermission.ApiStackAPICE700FF7.POST..messages"
   }
  },
  "APImessagesPOSTApiPermissionTestApiStackAPICE700FF7POSTmessagesDAAE279A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "postMessageFunction9657ED12",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "API62EA1CFF"
       },
       "/test-invoke-stage/POST/messages"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/messages/POST/ApiPermission.Test.ApiStackAPICE700FF7.POST..messages"
   }
  },
  "APImessagesPOSTE7359F16": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "postMessageFunction9657ED12",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "APImessagesCDE67788"
    },
    "RestApiId": {
     "Ref": "API62EA1CFF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/API/Default/messages/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01QyU7EMAz9Fu5poGziOjOIG4sG7pWbmOK2SarGYVRV/XeStMCc3mL72cm1LG/v5NUFnHyhdFf0VMv5nUF1IlrVrCcLxulofkDdozh82kwW0YOpNVTWaWy9fMnwFKxiclYQGDkf3TqQ8c31pKYkV7YIf1OB98he7hJELfdBdch78LjFyzkO/KWmYRwNeR/VImCgBhhPMMVd6Hk3UF630UccejcZtJzcMxWf1+TDVhL7XRgV5rXPyF9Op+LGfqtbcubL8m/n21MQ2Sb1vAYeAp93J35wVhPnq9OHydZffpcPsryPX996omIMlsmgPK74A22juzOXAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "APIEndpoint1793E782": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "API62EA1CFF"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "APIDeploymentStageprod278E75BA"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}